name: Checks
on:
  push:
    branches: [main]
  pull_request:

jobs:
  format:
    if: ${{ github.event_name == 'pull_request' }}
    name: "Rust Format"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - uses: mbrobbel/rustfmt-check@master
        with:
          args: --manifest-path ./lambda/Cargo.toml
          token: ${{ secrets.GITHUB_TOKEN }}
          mode: review

  clippy:
    name: "Rust Lint"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lambda
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - uses: giraffate/clippy-action@v1
        name: Clippy
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: 'github-pr-review'
          filter_mode: diff_context
          clippy_flags: "-- -W clippy::pedantic"

  tests:
    name: "Rust Tests"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lambda
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - name: Tests
        run: cargo test

  tsbuild:
    name: "CDK Build & Test"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cdk
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: |
          npm ci
          npm run build
          npm test

  eslint:
    name: "TS Lint"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-eslint@v1
        name: Lint CDK
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          filter_mode: diff_context
          workdir: ./cdk
      - uses: reviewdog/action-eslint@v1
        name: Lint Lambda Playwright
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          filter_mode: diff_context
          workdir: ./lambda/playwright
